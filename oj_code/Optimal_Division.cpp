//#include<iostream>
//#include<string>
//#include<vector>
//#include<map>
//#include<iomanip>
//#include<algorithm>
//#include<fstream>
//#include <queue>
//#include<map>
//#include<set>
//#include<unordered_set>
//#include<unordered_map>
//#include <random>
//#include <cmath>
//#include<utility>
//using namespace std;
//#define PrintEx(EX) cout<<#EX<<" :\n"<<EX<<endl
//
//int numDecodings(string s) {
//	vector<int> dp(s.length() + 1, 0);
//	dp[0] = 1;
//	if (s.empty())
//		return 0;
//	dp[1] = (s[0] == '0') ? 0 : 1;
//	int tmp;
//	for (size_t i = 2; i <= s.length(); i++) {
//		tmp = stoi(s.substr(i - 2, 2));
//		if (s[i-1] != '0')
//			dp[i] += dp[i - 1];
//		if (tmp > 9 && tmp < 27)
//			dp[i] += dp[i - 2];
//		
//	}
//	return dp.back();
//}
//int main() {
//	numDecodings("10");
//	return 0;
//}
//
///*
//int main() {
//std::random_device rd;  //Will be used to obtain a seed for the random number engine
//std::mt19937 gen(rd()); //Standard mersenne_twister_engine seeded with rd()
//std::uniform_int_distribution<> dis(1, 6);
//
//for (int n=0; n<10; ++n)
////Use dis to transform the random unsigned int generated by gen into an int in [1, 6]
//std::cout << dis(gen) << ' ';
//std::cout << '\n';
//return 0;
//}
//*/